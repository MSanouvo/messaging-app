// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  username      String          @unique @db.VarChar(100)
  password      String          @db.VarChar(255)
  display_name  String          @db.VarChar(100)
  date_created  DateTime        @default(now())
  messages      Messages[]
  conversations Conversations[]
  profile       Profiles[]
  convo_link    UserConvos[]
  // friendship    Friendships[]
}

model Messages {
  id           Int           @id @default(autoincrement())
  author       Users         @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  authorId     Int
  message      String
  date_created DateTime      @default(now())
  conversation Conversations @relation(fields: [convoId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  convoId      Int
}

model Conversations {
  id           Int          @id @default(autoincrement())
  name         String       @db.VarChar(100) @default("New Conversation")
  date_created DateTime     @default(now())
  password     String       @db.VarChar(50)
  isPublic     Boolean      @default(false)
  participant  Users[]
  messsages    Messages[]
  convo_link   UserConvos[]
}

model UserConvos {
  id           Int           @id @default(autoincrement())
  user         Users         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  convo        Conversations @relation(fields: [convoId], references: [id], onDelete: Cascade)
  convoId      Int
  date_created DateTime      @default(now())
  role         String        @default("user")

  @@unique([userId, convoId])
}

model Profiles {
  id           Int      @id @default(autoincrement())
  user         Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
  date_created DateTime @default(now())
  color        String   @default("grey")
  bio          String   @default("") @db.VarChar(255)
  pfp          String   @default("defaultUrl")
}

model Session {
  id        String   @id 
  sid       String   @unique
  data      String
  expiresAt DateTime
}
